{
    "pipes": [],
    "interfaces": [
        {
            "name": "InputComponentArgs",
            "id": "interface-InputComponentArgs-a91352039e47eb0c8c092c0d991b5a38c401c203ff195f553320570f4c6379de2dc8a6fff183e32f29a920781fa46865edc8399d601acef6bdac128f3f78fd44",
            "file": "src/app/assets/interfaces/input-component-args.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface InputComponentArgs {\n    placeholder: string;\n    value: string;\n    disabled: boolean;\n}\n",
            "properties": [
                {
                    "name": "disabled",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "placeholder",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "value",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 3
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "User",
            "id": "interface-User-d4821beac0e4a852e513391b7470981c4353fdd95a18628bb68136c8695b489ee15b926e2e5031bc26cf30e1508e0a362c3ee13a06734702b4d15af140e485d5",
            "file": "src/stories/user.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface User {\n  name: string;\n}\n",
            "properties": [
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 2
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "UserInterface",
            "id": "interface-UserInterface-46a88084165ee815fc35cf352fad2d5a914d65f00c05970609d7d8aa0ca4eec3f089fcd19f25367e46e82da9019f12246360291b5fc013453997dc52aad5dae3",
            "file": "src/app/assets/interfaces/user-interface.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface UserInterface {\n    email: string;\n    username: string\n}\n",
            "properties": [
                {
                    "name": "email",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "username",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 3
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        }
    ],
    "injectables": [
        {
            "name": "AuthService",
            "id": "injectable-AuthService-8d869f10d3b47b447c79ff02da4c63ce7628dc1b0420840aabaecea671f0f167ae435f3ebe26d401fa5ad0c1efc4da3c4ede374d6e68fa1b46c78ac68014fda1",
            "file": "src/app/services/auth/auth.service.ts",
            "properties": [
                {
                    "name": "currentUserSignal",
                    "defaultValue": "signal<UserInterface | null | undefined>(undefined)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "firebaseAuth",
                    "defaultValue": "inject(Auth)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "user$",
                    "defaultValue": "user(this.firebaseAuth)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 14
                }
            ],
            "methods": [
                {
                    "name": "login",
                    "args": [
                        {
                            "name": "email",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "password",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<void>",
                    "typeParameters": [],
                    "line": 38,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nUSER LOGIN\n",
                    "description": "<p>USER LOGIN</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 994,
                                "end": 999,
                                "kind": 80,
                                "id": 0,
                                "flags": 16842752,
                                "transformFlags": 0,
                                "escapedText": "email"
                            },
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 988,
                                "end": 993,
                                "kind": 80,
                                "id": 0,
                                "flags": 16842752,
                                "transformFlags": 0,
                                "escapedText": "param"
                            },
                            "comment": ""
                        },
                        {
                            "name": {
                                "pos": 1013,
                                "end": 1021,
                                "kind": 80,
                                "id": 0,
                                "flags": 16842752,
                                "transformFlags": 0,
                                "escapedText": "password"
                            },
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 1007,
                                "end": 1012,
                                "kind": 80,
                                "id": 0,
                                "flags": 16842752,
                                "transformFlags": 0,
                                "escapedText": "param"
                            },
                            "comment": ""
                        },
                        {
                            "tagName": {
                                "pos": 1029,
                                "end": 1036,
                                "kind": 80,
                                "id": 0,
                                "flags": 16842752,
                                "transformFlags": 0,
                                "escapedText": "returns"
                            },
                            "comment": ""
                        }
                    ]
                },
                {
                    "name": "register",
                    "args": [
                        {
                            "name": "email",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "username",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "password",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<void>",
                    "typeParameters": [],
                    "line": 26,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nREGISTER USER\n",
                    "description": "<p>REGISTER USER</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 615,
                                "end": 620,
                                "kind": 80,
                                "id": 0,
                                "flags": 16842752,
                                "transformFlags": 0,
                                "escapedText": "email"
                            },
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 609,
                                "end": 614,
                                "kind": 80,
                                "id": 0,
                                "flags": 16842752,
                                "transformFlags": 0,
                                "escapedText": "param"
                            },
                            "comment": ""
                        },
                        {
                            "name": {
                                "pos": 634,
                                "end": 642,
                                "kind": 80,
                                "id": 0,
                                "flags": 16842752,
                                "transformFlags": 0,
                                "escapedText": "username"
                            },
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 628,
                                "end": 633,
                                "kind": 80,
                                "id": 0,
                                "flags": 16842752,
                                "transformFlags": 0,
                                "escapedText": "param"
                            },
                            "comment": ""
                        },
                        {
                            "name": {
                                "pos": 656,
                                "end": 664,
                                "kind": 80,
                                "id": 0,
                                "flags": 16842752,
                                "transformFlags": 0,
                                "escapedText": "password"
                            },
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 650,
                                "end": 655,
                                "kind": 80,
                                "id": 0,
                                "flags": 16842752,
                                "transformFlags": 0,
                                "escapedText": "param"
                            },
                            "comment": ""
                        },
                        {
                            "tagName": {
                                "pos": 672,
                                "end": 679,
                                "kind": 80,
                                "id": 0,
                                "flags": 16842752,
                                "transformFlags": 0,
                                "escapedText": "returns"
                            },
                            "comment": ""
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable, inject, signal } from '@angular/core';\nimport { Auth, user } from '@angular/fire/auth';\nimport { from } from 'rxjs';\nimport { createUserWithEmailAndPassword, signInWithEmailAndPassword, updateProfile } from 'firebase/auth';\nimport { Observable } from 'rxjs';\nimport { UserInterface } from '../../assets/interfaces/user-interface';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  firebaseAuth = inject(Auth)\n  user$ = user(this.firebaseAuth)\n  currentUserSignal = signal<UserInterface | null | undefined>(undefined)\n\n  constructor() {}\n\n  /**\n   * REGISTER USER\n   * @param email \n   * @param username \n   * @param password \n   * @returns \n   */\n  register(email:string, username:string, password:string):Observable<void>{\n    const promise = createUserWithEmailAndPassword(this.firebaseAuth, email, password)\n    .then(response => updateProfile(response.user, {displayName: username}))\n    return from(promise)\n  }\n  \n  /**\n   * USER LOGIN\n   * @param email \n   * @param password \n   * @returns \n   */\n  login(email:string, password:string):Observable<void>{\n    const promise = signInWithEmailAndPassword(\n      this.firebaseAuth, \n      email, \n      password\n\n    ).then(() => {})\n    return from(promise)\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 15
            },
            "extends": [],
            "type": "injectable"
        }
    ],
    "guards": [
        {
            "name": "AuthGuard",
            "id": "injectable-AuthGuard-6676d472c4cde74dcb34ce02fdf9414f810c16aa992787b17192bd23d7915bc1c2a94bc74b8783fdd86d64c0d405c00d8efb4401fd12e08f971a25a67c743fdf",
            "file": "src/app/core/guards/auth.guard.ts",
            "properties": [],
            "methods": [
                {
                    "name": "canActivate",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 14,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport { CanActivate, Router } from '@angular/router';\nimport { Auth } from '@angular/fire/auth';\nimport { map } from 'rxjs/operators';\nimport { authState } from '@angular/fire/auth';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n\n  constructor(private auth: Auth, private router: Router) {}\n\n  canActivate() {\n    return authState(this.auth).pipe(\n      map(user => {\n        if (user) {\n          return true;\n        } else {\n          this.router.navigate(['/login']);\n          return false;\n        }\n      })\n    );\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "auth",
                        "type": "Auth",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 10,
                "jsdoctags": [
                    {
                        "name": "auth",
                        "type": "Auth",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "type": "guard"
        }
    ],
    "interceptors": [],
    "classes": [],
    "directives": [],
    "components": [
        {
            "name": "AppComponent",
            "id": "component-AppComponent-b20c51ed2c9ef79680e15978965eba6d0e506ff041b79e42c660d9a25a675d3827ac0f45c8ff9de073bf7d6f69a1f53c17624fb962d2b34e1bedbf95e0530d95",
            "file": "src/app/app.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-root",
            "styleUrls": [
                "./app.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./app.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "authService",
                    "defaultValue": "inject(AuthService)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 22
                }
            ],
            "methodsClass": [
                {
                    "name": "logout",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 38,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 24,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "RouterOutlet"
                },
                {
                    "name": "RouterLink"
                },
                {
                    "name": "FooterComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit, inject } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterLink, RouterOutlet } from '@angular/router';\nimport { FooterComponent } from './shared/footer/footer.component';\nimport { AuthService } from './services/auth/auth.service';\nimport { UserInterface } from './assets/interfaces/user-interface';\n\n@Component({\n  selector: 'app-root',\n  standalone: true,\n  imports: [\n    CommonModule,\n    RouterOutlet, \n    RouterLink,\n    FooterComponent\n  ],\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit {\n\n  authService = inject(AuthService)\n\n  ngOnInit(): void {\n    this.authService.user$.subscribe((user: UserInterface | null) => {\n      if(user){\n        this.authService.currentUserSignal.set({\n          email: user.email!,\n          username: user.username!\n        })\n      }else{\n        this.authService.currentUserSignal.set(null)\n      }\n      console.log(\"AUTH SERVICE\", this.authService.currentUserSignal())\n    })\n  }\n\n  logout(): void {\n    console.log('logout');\n  }\n  \n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./app.component.scss"
                }
            ],
            "stylesData": "",
            "extends": [],
            "implements": [
                "OnInit"
            ],
            "templateData": "<router-outlet></router-outlet>\n<app-footer></app-footer>"
        },
        {
            "name": "ButtonComponent",
            "id": "component-ButtonComponent-560184b8defeb45bacf6dd8c9cc199ec0f5be5e0f8a8e876f3f0968a0db4fc36b1e39c7eab804d5069e77a2e36ae79f5b7838f34a384aed528f533aa8ca1fbd3",
            "file": "src/app/ui-library/atoms/button/button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-button",
            "styleUrls": [
                "./button.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./button.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "backgroundColor",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "string | null",
                    "decorators": []
                },
                {
                    "name": "icon",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "size",
                    "defaultValue": "'medium'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "\"small\" | \"medium\" | \"large\"",
                    "decorators": []
                },
                {
                    "name": "styleType",
                    "defaultValue": "'text-only'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "\"text-only\" | \"text-icon\" | \"filled\" | \"outline\" | \"button-icon\"",
                    "decorators": []
                },
                {
                    "name": "text",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "buttonClick",
                    "defaultValue": "new EventEmitter<void>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Output, Input } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n@Component({\n  selector: 'app-button',\n  standalone: true,\n  imports: [CommonModule],\n  templateUrl: './button.component.html',\n  styleUrls: ['./button.component.css'],\n})\nexport class ButtonComponent {\n  @Output() buttonClick = new EventEmitter<void>();\n  @Input() text: string = '';\n  @Input() icon: boolean = false;\n  @Input() styleType: 'text-only' | 'text-icon' | 'filled' | 'outline' | 'button-icon' = 'text-only';\n  @Input() backgroundColor: string | null = null; // Ensure this property exists\n  @Input() size: 'small' | 'medium' | 'large' = 'medium'; // Ensure size exists as well\n\n  get buttonClasses(): string {\n    switch (this.styleType) {\n      case 'text-only':\n        return 'w-full text-left text-accent-500 bg-transparent hover:text-accent-300';\n      case 'filled':\n        return 'w-full flex items-center justify-center bg-secondary-600 hover:bg-secondary-500 text-white font-bold py-3 px-6 rounded transition-all';\n      case 'outline':\n        return 'border border-secondary-600 flex items-center justify-center hover:bg-secondary-500 text-secondary-600 font-medium py-1 px-6 rounded transition-all';\n      case 'text-icon':\n        return 'w-full text-left text-accent-600 bg-transparent hover:text-accent-300 inline-flex';\n      case 'button-icon':\n        return 'flex items-center justify-center bg-secondary-600 hover:bg-secondary-500 text-white font-bold py-1 px-6 rounded transition-all';\n      default:\n        return '';\n    }\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./button.component.css"
                }
            ],
            "stylesData": "",
            "extends": [],
            "accessors": {
                "buttonClasses": {
                    "name": "buttonClasses",
                    "getSignature": {
                        "name": "buttonClasses",
                        "type": "string",
                        "returnType": "string",
                        "line": 20
                    }
                }
            },
            "templateData": "<!-- BUTTON [HTML] iDeparture Design System v.3.0.1 -->\n<button [ngClass]=\"buttonClasses\" (click)=\"buttonClick.emit()\" [attr.aria-label]=\"text || 'Button'\">\n  <!-- Text (conditionally displayed) -->\n  <span *ngIf=\"text\">{{ text }}</span>\n\n  <!-- Icon (conditionally displayed) -->\n  <ng-container *ngIf=\"styleType === 'text-icon' || styleType === 'button-icon'\">\n    <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke-width=\"1.5\" stroke=\"currentColor\" class=\"w-3.5 h-3.5 ms-1 mt-1\">\n      <path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"m8.25 4.5 7.5 7.5-7.5 7.5\" />\n    </svg>     \n  </ng-container>\n</button>\n"
        },
        {
            "name": "DashboardComponent",
            "id": "component-DashboardComponent-4a7195f13929bdba724a8d0bc28936fb67df60f22e75bcaa9a7e0376ff6c6d2e5e551118a8bd1445921f65108ce4c71996f143b3297fd59f6839f02e30b15bd4",
            "file": "src/app/features/dashboard/dashboard.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-dashboard",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./dashboard.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "logout",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 16,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Auth, signOut } from '@angular/fire/auth';\n\n@Component({\n  selector: 'app-dashboard',\n  standalone: true,\n  imports: [],\n  templateUrl: './dashboard.component.html',\n  styleUrl: './dashboard.component.css'\n})\nexport class DashboardComponent {\n\n  constructor(private auth: Auth, private router: Router) { }\n\n  logout() {\n    signOut(this.auth).then(() => {\n      this.router.navigate(['/login']);\n    }).catch(error => {\n      console.error('Logout failed:', error);\n    });\n  }\n\n}\n\n",
            "styleUrl": "./dashboard.component.css",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "auth",
                        "type": "Auth",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 12,
                "jsdoctags": [
                    {
                        "name": "auth",
                        "type": "Auth",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "templateData": "<div class=\"dashboard-container\">\n    <h2>Welcome to the Dashboard</h2>\n    <button (click)=\"logout()\">Logout</button>\n  </div>\n  "
        },
        {
            "name": "FooterComponent",
            "id": "component-FooterComponent-7d2e5e69512a0634b7e027ce1fbd7a7f7973dd2e20be74142ff11b6f608d278910319010e8b369766a6ec2807cb7847cd729180c4e3973552ae6bd4253548e08",
            "file": "src/app/shared/footer/footer.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-footer",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./footer.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  standalone: true,\n  imports: [],\n  templateUrl: './footer.component.html',\n  styleUrl: './footer.component.css'\n})\nexport class FooterComponent {\n\n}\n",
            "styleUrl": "./footer.component.css",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<!-- src/app/footer.component.html -->\n<footer class=\"bg-[#1B2E40] text-[#F0F0F0] py-8\">\n  \n  <div class=\"container mx-auto px-4\">\n    <div class=\"grid grid-cols-1 md:grid-cols-5 gap-8\">\n      <div>\n        <h3 class=\"text-[#F5B753] font-semibold text-lg\">About iDeparture</h3>\n        <ul class=\"mt-4\">\n          <li><a href=\"#\" class=\"hover:underline\">Who We Are</a></li>\n          <li><a href=\"#\" class=\"hover:underline\">Careers</a></li>\n          <li><a href=\"#\" class=\"hover:underline\">Newsroom</a></li>\n          <li><a href=\"#\" class=\"hover:underline\">Investor Relations</a></li>\n          <li><a href=\"#\" class=\"hover:underline\">Legal</a></li>\n          <li><a href=\"#\" class=\"hover:underline\">Contract of Carriage</a></li>\n          <li><a href=\"#\" class=\"hover:underline\">Privacy Notice</a></li>\n        </ul>\n      </div>\n      <div>\n        <h3 class=\"text-[#F5B753] font-semibold text-lg\">Customer Service</h3>\n        <ul class=\"mt-4\">\n          <li><a href=\"#\" class=\"hover:underline\">Help Center</a></li>\n          <li><a href=\"#\" class=\"hover:underline\">Feedback & Complaints</a></li>\n          <li><a href=\"#\" class=\"hover:underline\">Travel Advisories</a></li>\n          <li><a href=\"#\" class=\"hover:underline\">Customer Service Commitment</a></li>\n          <li><a href=\"#\" class=\"hover:underline\">Canada - iDeparture Travel Rights</a></li>\n          <li><a href=\"#\" class=\"hover:underline\">Tarmac Delay Plan</a></li>\n          <li><a href=\"#\" class=\"hover:underline\">Site Map</a></li>\n        </ul>\n      </div>\n      <div>\n        <h3 class=\"text-[#F5B753] font-semibold text-lg\">Products & Services</h3>\n        <ul class=\"mt-4\">\n          <li><a href=\"#\" class=\"hover:underline\">Optional Services & Fees</a></li>\n          <li><a href=\"#\" class=\"hover:underline\">Corporate Travel</a></li>\n          <li><a href=\"#\" class=\"hover:underline\">EasyBiz</a></li>\n          <li><a href=\"#\" class=\"hover:underline\">Travel Agents</a></li>\n          <li><a href=\"#\" class=\"hover:underline\">Cargo</a></li>\n          <li><a href=\"#\" class=\"hover:underline\">Gift Certificates</a></li>\n          <li><a href=\"#\" class=\"hover:underline\">Travel Insurance</a></li>\n        </ul>\n      </div>\n      <div>\n        <h3 class=\"text-[#F5B753] font-semibold text-lg\">Email Deals</h3>\n        <ul class=\"mt-4\">\n          <li><a href=\"#\" class=\"hover:underline\">Sign Up Now</a></li>\n          <li><a href=\"#\" class=\"hover:underline\">Give Feedback</a></li>\n          <li><a href=\"#\" class=\"hover:underline\">Get The App</a></li>\n        </ul>\n      </div>\n      <div>\n        <h3 class=\"text-[#F5B753] font-semibold text-lg\">Follow Us</h3>\n        <ul class=\"mt-4\">\n          <li><a href=\"#\" class=\"hover:underline\">Facebook</a></li>\n          <li><a href=\"#\" class=\"hover:underline\">Twitter</a></li>\n          <li><a href=\"#\" class=\"hover:underline\">Instagram</a></li>\n          <li><a href=\"#\" class=\"hover:underline\">YouTube</a></li>\n          <li><a href=\"#\" class=\"hover:underline\">Shop Our Company Store</a></li>\n        </ul>\n      </div>\n    </div>\n  </div>\n\n  <div class=\"container mx-auto px-4 py-16\">\n    <h3 class=\"text-[#F5B753] font-semibold text-lg\">About iDeparture</h3>\n    <ul class=\"mt-4\">\n      <li><a href=\"#\" class=\"hover:underline\">Who We Are</a></li>\n      <li><a href=\"#\" class=\"hover:underline\">Careers</a></li>\n      <li><a href=\"#\" class=\"hover:underline\">Newsroom</a></li>\n      <li><a href=\"#\" class=\"hover:underline\">Investor Relations</a></li>\n      <li><a href=\"#\" class=\"hover:underline\">Legal</a></li>\n      <li><a href=\"#\" class=\"hover:underline\">Contract of Carriage</a></li>\n      <li><a href=\"#\" class=\"hover:underline\">Privacy Notice</a></li>\n    </ul>\n  </div>\n\n  <div class=\"container mx-auto px-4 py-16\">\n    &#169; 2024 iDeparture, LLC. All rights reserved. \n  </div>\n  </footer>\n  "
        },
        {
            "name": "InputComponent",
            "id": "component-InputComponent-1c82675cd255f3070f85760c7293841ca41d73052c1a6ba2443d3c30ab4b7620923b0cdd7d222853cc9ca4614d11a90ac0949c9c1c98e913e61187d37ebc1560",
            "file": "src/app/ui-library/atoms/input/input.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-input",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./input.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "styleType",
                    "defaultValue": "'default'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Output, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-input',\n  standalone: true,\n  imports: [],\n  templateUrl: './input.component.html',\n  styleUrl: './input.component.css'\n})\nexport class InputComponent {\n  @Input() styleType: 'default' = 'default';\n  get inputClasses(): string {\n    switch (this.styleType) {\n      default:\n        return 'w-full px-3 py-3 border border-neutral-400 bg-neutral-200 rounded-md focus:outline-none focus:ring-1 focus:ring-accent';\n    }\n  }\n}\n",
            "styleUrl": "./input.component.css",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "accessors": {
                "inputClasses": {
                    "name": "inputClasses",
                    "getSignature": {
                        "name": "inputClasses",
                        "type": "string",
                        "returnType": "string",
                        "line": 14
                    }
                }
            },
            "templateData": "<!-- ATOM/INPUT [COMPONENT] iDeparture Design System v.3.0.1 -->\n<input type=\"password\" placeholder=\"Enter your password\" [ngClass]=\"inputClasses\"/>\n"
        },
        {
            "name": "LoginComponent",
            "id": "component-LoginComponent-677b11b0bfc053bcaf2237860ed166a9ad15b6d9cd336f852826b0a3f8cff6dd4b667ed1118e80eeac0aa05fbce6fdff01ba603a74b598306a3fd45c4008c4e2",
            "file": "src/app/features/auth/components/login/login.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-login",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./login.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "authService",
                    "defaultValue": "inject(AuthService)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "errorMessage",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | null",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 28
                },
                {
                    "name": "fb",
                    "defaultValue": "inject(FormBuilder)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "form",
                    "defaultValue": "this.fb.nonNullable.group({\n    email: ['', Validators.required],\n    password: ['', Validators.required],\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "http",
                    "defaultValue": "inject(HttpClient)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "idepartureLogo",
                    "defaultValue": "\"assets/imgs/svgs/icon_ideparture.svg\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "router",
                    "defaultValue": "inject(Router)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 20
                }
            ],
            "methodsClass": [
                {
                    "name": "loginWithGoogle",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 45,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onSubmit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 31,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "ReactiveFormsModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { HttpClient } from '@angular/common/http';\nimport { Component, inject } from '@angular/core';\nimport { FormBuilder, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../../../../services/auth/auth.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrl: './login.component.css',\n  standalone: true,\n  imports: [ReactiveFormsModule],\n})\nexport class LoginComponent {\n\n  idepartureLogo: string = \"assets/imgs/svgs/icon_ideparture.svg\";\n  fb = inject(FormBuilder);\n  http = inject(HttpClient);\n  authService = inject(AuthService)\n  router = inject(Router);\n\n  form = this.fb.nonNullable.group({\n    email: ['', Validators.required],\n    password: ['', Validators.required],\n  });\n\n  // ERROR MESSAGE\n  errorMessage: string | null = null;\n\n  // LOGIN : ON SUBMIT\n  onSubmit(): void {\n    const rawForm = this.form.getRawValue()\n    this.authService\n      .login(rawForm.email, rawForm.password)\n      .subscribe({\n        next:() => {\n          this.router.navigateByUrl('/dashboard')\n        },\n        error: (err) =>{\n          this.errorMessage = err.code\n        }\n      })\n  }\n\n  loginWithGoogle() {\n    // Add the logic for Google login\n  }\n}\n",
            "styleUrl": "./login.component.css",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<!-- login.component.html | iDeparture -->\n\n<div id=\"ideparture-login\" class=\"min-h-screen flex items-center justify-center flex-col bg-cover bg-center\" >\n\n  <div id=\"ideparture-icon\" class=\"block h-16 w-16 mx-auto mb-0\"></div>\n  <h1 class=\"text-h1 font-futura text-white\">iDeparture</h1>\n  <h2 class=\"text-h4 font-roboto text-accent-400 mb-10\">Never Miss Another Flight...</h2>\n  <p class=\"text-p text-white mb-2\"> \n    Don't have an account? \n    <a href=\"register\" class=\"text-p font-roboto text-accent-400\">Get started free</a>\n  </p>\n\n  <div id=\"ideparture-login-panel\" class=\"flex w-[830px] bg-white justify-center rounded-lg p-12\">\n    <!-- [FORM] -->\n    <form [formGroup]=\"form\" (ngSubmit)=\"onSubmit()\" class=\"w-3/5 mr-12 pr-12 border-r border-neutral-300\">\n      \n      @if (errorMessage) {\n        <div style=\"color: #FF0000; font-size: 14px; background: antiquewhite; padding: 5px; margin: 0 0 25px 0;\">{{ errorMessage }}</div>\n      }\n\n      <!-- Email Input -->\n      <div class=\"mb-4\">\n        <label class=\"block text-secondary-500 font-semibold mb-2\" for=\"email\">Email</label>\n        <input formControlName=\"email\" id=\"email\" type=\"email\" placeholder=\"Enter your email\" class=\"w-full px-3 py-3 border border-neutral-400 bg-neutral-200 rounded-md focus:outline-none focus:ring-1 focus:ring-accent-500\"/>\n      </div>\n  \n      <!-- Password Input -->\n      <div class=\"mb-6\">\n        <label class=\"block text-secondary-500 font-semibold mb-2\" for=\"password\">Password</label>\n        <input formControlName=\"password\" id=\"password\" type=\"password\" placeholder=\"Enter your password\" class=\"w-full px-3 py-3 border border-neutral-400 bg-neutral-200 rounded-md focus:outline-none focus:ring-1 focus:ring-accent-500\"/>\n      </div>\n  \n      <!-- Login Button -->\n      <div class=\"flex justify-between items-center mb-6\">\n        <button type=\"submit\" (click)=\"loginWithGoogle()\" class=\"w-full flex items-center justify-center bg-accent-400 hover:bg-secondary-500 text-primary-500 font-bold py-3 px-6 rounded transition-all\">\n          Log In\n        </button>\n      </div>\n    </form>\n  \n    <!-- [OPEN.AUTH] -->\n    <ul class=\"mt-7 space-y-2\">\n      <li>\n        <a href=\"#\" class=\"block bg-neutral-100 border border-neutral-300 text-center py-3 px-16 text-sm w-[300px]\">Sign In With Google</a>\n      </li>\n      <li>\n        <a href=\"#\" class=\"block bg-neutral-100 border border-neutral-300 text-center py-3 px-16 text-sm w-[300px]\">Sign In With Microsoft</a>\n      </li>\n      <li>\n        <a href=\"#\" class=\"block bg-neutral-100 border border-neutral-300 text-center py-3 px-16 text-sm w-[300px]\">Sign In With Apple</a>\n      </li>\n      <li>\n        <a href=\"#\" class=\"block bg-neutral-100 border border-neutral-300 text-center py-3 px-16 text-sm w-[300px]\">Log in with SSO</a>\n      </li>\n    </ul>\n  </div>\n  \n</div>\n"
        },
        {
            "name": "RegisterComponent",
            "id": "component-RegisterComponent-e867df70d2ec3fe7c25e1644bdff9e6e6900fde5fce31aa17676080e39db54720748ddc932791e4133893a3f144d1b277e95229cbf768f162872be8815fd4965",
            "file": "src/app/features/auth/components/register/register.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-register",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./register.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "authService",
                    "defaultValue": "inject(AuthService)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "errorMessage",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | null",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 24
                },
                {
                    "name": "fb",
                    "defaultValue": "inject(FormBuilder)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "form",
                    "defaultValue": "this.fb.nonNullable.group({\n    username: ['', Validators.required],\n    email: ['', Validators.required],\n    password: ['', Validators.required],\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "http",
                    "defaultValue": "inject(HttpClient)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "router",
                    "defaultValue": "inject(Router)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 17
                }
            ],
            "methodsClass": [
                {
                    "name": "loginWithGoogle",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 41,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onSubmit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 26,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "ReactiveFormsModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { HttpClient } from '@angular/common/http';\nimport { Component, inject } from '@angular/core';\nimport { FormBuilder, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../../../../services/auth/auth.service';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  standalone: true,\n  imports: [ReactiveFormsModule],\n})\nexport class RegisterComponent {\n  fb = inject(FormBuilder);\n  http = inject(HttpClient);\n  authService = inject(AuthService)\n  router = inject(Router);\n\n  form = this.fb.nonNullable.group({\n    username: ['', Validators.required],\n    email: ['', Validators.required],\n    password: ['', Validators.required],\n  });\n  errorMessage: string | null = null;\n\n  onSubmit(): void {\n    console.log('register');\n    const rawForm = this.form.getRawValue()\n    this.authService\n      .register(rawForm.email, rawForm.username, rawForm.password)\n      .subscribe({\n        next:() => {\n          this.router.navigateByUrl('/')\n        },\n        error: (err) =>{\n          this.errorMessage = err.code\n        }\n      })\n  }\n\n  loginWithGoogle(){\n    console.log(\"Login With Google\")\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "\n\n<div id=\"ideparture-login\" class=\"min-h-screen flex items-center justify-center flex-col bg-cover bg-center\" >\n\n  \n\n  <div id=\"ideparture-icon\" class=\"block h-16 w-16 mx-auto mb-0\"></div>\n  <h1 class=\"text-h1 font-futura text-white\">iDeparture</h1>\n  <h2 class=\"text-h4 font-roboto text-accent-400 mb-10\">Register An Account</h2>\n  <p class=\"text-p text-primary-500 mb-2\"> \n    Already have an account? \n    <a href=\"/\" class=\"text-p font-roboto text-accent-400\">Login</a>\n  </p>\n  <div id=\"ideparture-login-panel\" class=\"flex w-[830px] bg-white justify-center rounded-lg p-12\">\n    <form [formGroup]=\"form\" (ngSubmit)=\"onSubmit()\" class=\"w-3/5\">\n\n      @if (errorMessage) {\n        <div style=\"color: #FF0000; font-size: 14px; background: antiquewhite; padding: 5px; margin: 0 0 25px 0;\">{{ errorMessage }}</div>\n      }\n\n      <div class=\"mb-4\">\n        <label class=\"block text-secondary-500 font-semibold mb-2\" for=\"email\">Username</label>\n        <input formControlName=\"username\" id=\"username\" type=\"text\" placeholder=\"Create A Username\" class=\"w-full px-3 py-3 border border-neutral-400 bg-neutral-200 rounded-md focus:outline-none focus:ring-1 focus:ring-accent-500\"/>\n      </div>\n\n      <div class=\"mb-4\">\n        <label class=\"block text-secondary-500 font-semibold mb-2\" for=\"email\">Email</label>\n        <input formControlName=\"email\" id=\"email\" type=\"email\" placeholder=\"Provide A Valid Email\" class=\"w-full px-3 py-3 border border-neutral-400 bg-neutral-200 rounded-md focus:outline-none focus:ring-1 focus:ring-accent-500\"/>\n      </div>\n\n      <div class=\"mb-6\">\n        <label class=\"block text-secondary-500 font-semibold mb-2\" for=\"email\">Password</label>\n        <input formControlName=\"password\" id=\"password\" type=\"password\" placeholder=\"Create A Password\" class=\"w-full px-3 py-3 border border-neutral-400 bg-neutral-200 rounded-md focus:outline-none focus:ring-1 focus:ring-accent-500\"/>\n      </div>\n\n      <div class=\"flex justify-between items-center mb-6\">\n        <button type=\"submit\" (click)=\"loginWithGoogle()\" class=\"w-full flex items-center justify-center bg-accent-400 hover:bg-secondary-500 text-primary-500 font-bold py-3 px-6 rounded transition-all\">\n          Register\n        </button>\n      </div>\n\n    </form>\n  </div>\n\n</div>\n"
        }
    ],
    "modules": [],
    "miscellaneous": {
        "variables": [
            {
                "name": "appConfig",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/app.config.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "ApplicationConfig",
                "defaultValue": "{\n  providers: [\n    provideRouter(routes),\n    provideHttpClient(),\n    provideFirebaseApp(() => initializeApp(firebaseConfig)),  // Directly provide Firebase app here\n    provideAuth(() => getAuth())  // Directly provide Auth here\n  ],\n}"
            },
            {
                "name": "bootstrap",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/main.server.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "() => bootstrapApplication(AppComponent, config)"
            },
            {
                "name": "config",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/app.config.server.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "mergeApplicationConfig(appConfig, serverConfig)"
            },
            {
                "name": "firebaseConfig",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/app.config.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  apiKey: \"AIzaSyDuS4UEYTN_pzvWPCG7w59KPI8qfP_GeEo\",\n  authDomain: \"ideparture.firebaseapp.com\",\n  projectId: \"ideparture\",\n  storageBucket: \"ideparture.appspot.com\",\n  messagingSenderId: \"256776269831\",\n  appId: \"1:256776269831:web:5805a5c88ef396d94f3aa2\"\n}"
            },
            {
                "name": "serverConfig",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/app.config.server.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "ApplicationConfig",
                "defaultValue": "{\n  providers: [\n    provideServerRendering()\n  ]\n}"
            }
        ],
        "functions": [],
        "typealiases": [],
        "enumerations": [],
        "groupedVariables": {
            "src/app/app.config.ts": [
                {
                    "name": "appConfig",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/app.config.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ApplicationConfig",
                    "defaultValue": "{\n  providers: [\n    provideRouter(routes),\n    provideHttpClient(),\n    provideFirebaseApp(() => initializeApp(firebaseConfig)),  // Directly provide Firebase app here\n    provideAuth(() => getAuth())  // Directly provide Auth here\n  ],\n}"
                },
                {
                    "name": "firebaseConfig",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/app.config.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  apiKey: \"AIzaSyDuS4UEYTN_pzvWPCG7w59KPI8qfP_GeEo\",\n  authDomain: \"ideparture.firebaseapp.com\",\n  projectId: \"ideparture\",\n  storageBucket: \"ideparture.appspot.com\",\n  messagingSenderId: \"256776269831\",\n  appId: \"1:256776269831:web:5805a5c88ef396d94f3aa2\"\n}"
                }
            ],
            "src/main.server.ts": [
                {
                    "name": "bootstrap",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/main.server.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "() => bootstrapApplication(AppComponent, config)"
                }
            ],
            "src/app/app.config.server.ts": [
                {
                    "name": "config",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/app.config.server.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "mergeApplicationConfig(appConfig, serverConfig)"
                },
                {
                    "name": "serverConfig",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/app.config.server.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ApplicationConfig",
                    "defaultValue": "{\n  providers: [\n    provideServerRendering()\n  ]\n}"
                }
            ]
        },
        "groupedFunctions": {},
        "groupedEnumerations": {},
        "groupedTypeAliases": {}
    },
    "routes": [],
    "coverage": {
        "count": 1,
        "status": "low",
        "files": [
            {
                "filePath": "src/app/app.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/app.config.server.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "config",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/app.config.server.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "serverConfig",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/app.config.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "appConfig",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/app.config.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "firebaseConfig",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/assets/interfaces/input-component-args.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "InputComponentArgs",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/assets/interfaces/user-interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "UserInterface",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/core/guards/auth.guard.ts",
                "type": "guard",
                "linktype": "guard",
                "name": "AuthGuard",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/features/auth/components/login/login.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "LoginComponent",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "src/app/features/auth/components/register/register.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "RegisterComponent",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/app/features/dashboard/dashboard.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DashboardComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/services/auth/auth.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "AuthService",
                "coveragePercent": 28,
                "coverageCount": "2/7",
                "status": "medium"
            },
            {
                "filePath": "src/app/shared/footer/footer.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FooterComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/ui-library/atoms/button/button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ButtonComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/ui-library/atoms/input/input.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "InputComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/main.server.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "bootstrap",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/user.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "User",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            }
        ]
    }
}